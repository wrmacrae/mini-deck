{"version":3,"sources":["components/MiniDeck.jsx","App.js","index.js"],"names":["subsetDeck","deck","deckWithRepeats","forEach","line","count","split","name","slice","join","i","push","array","length","j","Math","floor","random","temp","shuffleArray","MiniDeck","props","state","commander","handleInputChange","bind","miniDeckString","this","console","log","text","window","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","warn","removeChild","copyToClipboard","event","target","value","processUpload","upload","commanderIndex","indexOf","deckIndex","setState","className","type","id","onChange","onClick","copyMiniDeckToClipboard","React","Component","App","render","getElementById"],"mappings":"sSAaA,SAASA,EAAWC,GAClB,IAAIC,EAAkB,GAStB,OARAD,EAAKE,SAAQ,SAAUC,GAGrB,IAFA,IAAIC,EAAQD,EAAKE,MAAM,KAAK,GACxBC,EAAOH,EAAKE,MAAM,KAAKE,MAAM,GAAGC,KAAK,KAChCC,EAAI,EAAGA,EAAIL,EAAOK,IACzBR,EAAgBS,KAAKJ,MAf3B,SAAsBK,GAClB,IAAK,IAAIF,EAAIE,EAAMC,OAAS,EAAGH,EAAI,EAAGA,IAAK,CACvC,IAAII,EAAIC,KAAKC,MAAMD,KAAKE,UAAYP,EAAI,IACpCQ,EAAON,EAAMF,GACjBE,EAAMF,GAAKE,EAAME,GACjBF,EAAME,GAAKI,GAajBC,CAAajB,GACNA,EAAgBM,MAAM,EAAE,I,IAgCZY,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXrB,KAAM,GACNsB,UAAW,IAEb,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBANR,E,sEAUjB,IAxCkBxB,EAwCdyB,GAxCczB,EAwCgBD,EAAW2B,KAAKL,MAAMrB,MAvCnD,cAuC0D0B,KAAKL,MAAMC,UAvCzC,eAAiBtB,EAAKQ,KAAK,SAwC5DmB,QAAQC,IAAIH,GArChB,SAAyBI,GACrB,GAAIC,OAAOC,eAAiBD,OAAOC,cAAcC,QAE7C,OAAOF,OAAOC,cAAcC,QAAQ,OAAQH,GAG3C,GAAII,SAASC,uBAAyBD,SAASC,sBAAsB,QAAS,CAC/E,IAAIC,EAAWF,SAASG,cAAc,YACtCD,EAASE,YAAcR,EACvBM,EAASG,MAAMC,SAAW,QAC1BN,SAASO,KAAKC,YAAYN,GAC1BA,EAASO,SACT,IACWT,SAASU,YAAY,QAEhC,MAAOC,GAEH,OADAjB,QAAQkB,KAAK,4BAA6BD,IACnC,EALX,QAQIX,SAASO,KAAKM,YAAYX,KAkBlCY,CAAgBtB,K,wCAGAuB,GAChB,IAAMC,EAASD,EAAMC,OACfC,EAAQD,EAAOC,MAER,WADAD,EAAO3C,MAElBoB,KAAKyB,cAAcD,K,oCAKTE,GACZ,IAAIpD,EAAOoD,EAAO/C,MAAM,MACpBgD,EAAiBrD,EAAKsD,QAAQ,aAClC,IAAwB,IAApBD,EACF,IAAI/B,EAAYtB,EAAKqD,EAAiB,GAExC,IAAIE,EAAYvD,EAAKsD,QAAQ,SACV,IAAfC,IACFvD,EAAOA,EAAKO,MAAMgD,EAAY,IAEhC7B,KAAK8B,SAAS,CACZxD,KAAMA,EACNsB,UAAWA,M,+BAKb,OAAO,yBAAKmC,UAAU,QACpB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,mBACb,2HAC+F,6BAD/F,2GAE0G,6BAF1G,8BAOJ,yBAAKA,UAAU,QACb,8BAAUA,UAAU,SAASC,KAAK,SAASC,GAAG,SAASrD,KAAK,SAASsD,SAAUlC,KAAKH,qBAEtF,4BAAQkC,UAAU,OAAOI,QAASnC,KAAKoC,wBAAwBtC,KAAKE,OAApE,uB,GAxDgCqC,IAAMC,WCvC7BC,MAZf,WAEE,OACE,yBAAKR,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,SCJRS,iBACE,kBAAC,EAAD,MACAjC,SAASkC,eAAe,W","file":"static/js/main.84fb6fce.chunk.js","sourcesContent":["import React from 'react';\nimport './MiniDeck.css';\n\n\nfunction shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\n\nfunction subsetDeck(deck) {\n  var deckWithRepeats = []\n  deck.forEach(function (line) {\n    var count = line.split(\" \")[0];\n    var name = line.split(\" \").slice(1).join(\" \");\n    for (var i = 0; i < count; i++) {\n      deckWithRepeats.push(name);\n    }\n  });\n  shuffleArray(deckWithRepeats);\n  return deckWithRepeats.slice(0,59);\n}\n\nfunction deckToString(deck, commander) {\n  return \"Commander\\n\" + commander + \"\\n\\nDeck\\n1 \" + deck.join(\"\\n1 \");\n}\n\nfunction copyToClipboard(text) {\n    if (window.clipboardData && window.clipboardData.setData) {\n        // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n        return window.clipboardData.setData(\"Text\", text);\n\n    }\n    else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\n        var textarea = document.createElement(\"textarea\");\n        textarea.textContent = text;\n        textarea.style.position = \"fixed\";  // Prevent scrolling to bottom of page in Microsoft Edge.\n        document.body.appendChild(textarea);\n        textarea.select();\n        try {\n            return document.execCommand(\"copy\");  // Security exception may be thrown by some browsers.\n        }\n        catch (ex) {\n            console.warn(\"Copy to clipboard failed.\", ex);\n            return false;\n        }\n        finally {\n            document.body.removeChild(textarea);\n        }\n    }\n}\n\nexport default class MiniDeck extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck: [],\n      commander: \"\"\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  copyMiniDeckToClipboard() {\n    var miniDeckString = deckToString(subsetDeck(this.state.deck), this.state.commander);\n    console.log(miniDeckString);\n    copyToClipboard(miniDeckString);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    if (name === \"upload\") {\n      this.processUpload(value);\n    }\n  }\n\n\n  processUpload(upload) {\n    var deck = upload.split(\"\\n\");\n    var commanderIndex = deck.indexOf(\"Commander\");\n    if (commanderIndex !== -1) {\n      var commander = deck[commanderIndex + 1];\n    }\n    var deckIndex = deck.indexOf(\"Deck\");\n    if (deckIndex !== -1) {\n      deck = deck.slice(deckIndex + 1);\n    }\n    this.setState({\n      deck: deck,\n      commander: commander\n    });\n  }\n\n  render() {\n    return <div className=\"page\">\n      <div className=\"explanation\">\n        <div className=\"explanationText\">\n          <p>\n            1) Paste a deck that you would import into Arena in the textbox (e.g. a 100 card brawl deck).<br />\n            2) Click Copy Mini-Deck to get a 59-card deck randomly selected from that, which goes on your clipboard.<br />\n            3) Import that to Arena.\n          </p>\n        </div>\n      </div>\n      <div className=\"form\">\n        <textarea className=\"upload\" type=\"string\" id=\"upload\" name=\"upload\" onChange={this.handleInputChange} />\n      </div>\n      <button className=\"copy\" onClick={this.copyMiniDeckToClipboard.bind(this)}>\n        Copy Mini-Deck\n      </button>\n    </div>;\n  }\n}","import React from 'react';\nimport './App.css';\nimport MiniDeck from './components/MiniDeck';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MiniDeck />\n      </header> \n    </div>\n  );\n        // <label for=\"paragons\"> Paragons: <input class=\"paragons\" type=\"number\" id=\"paragons\" name=\"paragons\" min=\"0\" /></label>\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nrender(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}